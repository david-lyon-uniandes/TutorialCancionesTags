name: CI Pipeline Release

# Controls when the action will run. 
on:
  push:
    branches: [ develop ]
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  create-release:
    if: ${{ contains(github.event.head_commit.message, 'PLEASE_CREATE_RELEASE_AND_MERGE') }}
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Check out rama
      uses: actions/checkout@v2
    - name: Crear rama release
      run: |
        git checkout -b release
        git push -f -u origin release
  merge-develop-to-release:
    needs: create-release
    name: Merge develop -> release
    runs-on: ubuntu-latest
    steps:
    - name: automerge
      uses: tukasz/direct-merge-action@master
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        source-branch: develop
        target-branch: release
  test:
    needs: merge-develop-to-release
    name: Pruebas
    runs-on: ubuntu-latest
    steps:
    - name: Checkout de repositorio
      uses: actions/checkout@v2
    - name: Configuración de entorno de python
      uses: actions/setup-python@v2
      with:
          python-version: '3.7'
    - name: Instalación de librerías y dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Correr pruebas
      id: correr-pruebas
      run: python -m unittest discover -s tests
    - name: Validar resultado con errores
      if: ${{ failure() }}
      env:
        MENSAJE_ERROR: Una o varias pruebas fallaron
      run: echo "::set-output name=respuesta::${MENSAJE_ERROR}"      
    - name: Validar resultado sin errores
      if: ${{ success() }}
      env:
        MENSAJE_EXITO: Todas las pruebas fueron exitosas
      run: echo "::set-output name=respuesta::${MENSAJE_EXITO}"
    - name: Cálculo de cubrimiento
      id: cubrimiento
      run: |
          coverage run -m unittest tests/*.py
          coverage report -m
  merge-relase-to-main:
    needs: test
    name: Merge release -> main
    runs-on: ubuntu-latest
    steps:
    - name: automerge
      uses: tukasz/direct-merge-action@master
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        source-branch: release
        target-branch: main
